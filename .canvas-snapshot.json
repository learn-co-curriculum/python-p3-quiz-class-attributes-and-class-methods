{
  "quiz": {
    "id": 53497,
    "title": "Class Attributes and Methods Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53497",
    "mobile_url": "https://learning.flatironschool.com/courses/7559/quizzes/53497?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"python-p3-quiz-class-attributes-and-class-methods\"></div>\n<header class=\"fis-header\"><a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/python-p3-quiz-class-attributes-and-class-methods/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a></header>\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</p>\n<p>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 6,
    "points_possible": 6.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53497"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53497/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53497/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53497/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53497/submission_versions",
    "assignment_id": 263576,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25101,
    "show_correct_answers_last_attempt": true,
    "version_number": 5,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "ge3191e343dd14cd3355ea7eb253ee47d",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366029,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635910,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Classes themselves are objects.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class attributes and Class Methods",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class attributes and Class Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9322,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>Yes! If our definition of an object is a bundle of code that contains data and\nbehaviors, then an entire class itself qualifies as an object.</p>",
          "weight": 100.0
        },
        {
          "id": 3379,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>You might want to review the source/s for this question.</p>",
          "weight": 0.0
        },
        {
          "id": 2079,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366030,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635908,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What type of scope does a <strong>class attribute</strong> have?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class attributes and Class Methods",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class attributes and Class Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 390,
          "text": "",
          "html": "<p>Class</p>",
          "comments": "",
          "comments_html": "<p>Exactly! A class attribute is accessible to the whole class and is unique to the\nclass itself.</p>",
          "weight": 100.0
        },
        {
          "id": 8844,
          "text": "",
          "html": "<p>Local</p>",
          "comments": "",
          "comments_html": "<p>Local scope is used to describe variables declared in a specific scope, such as\nin methods. They are only available within that scope.</p>",
          "weight": 0.0
        },
        {
          "id": 3384,
          "text": "",
          "html": "<p>Global</p>",
          "comments": "",
          "comments_html": "<p>Global variables are available everywhere.</p>",
          "weight": 0.0
        },
        {
          "id": 7868,
          "text": "",
          "html": "<p>Instance</p>",
          "comments": "",
          "comments_html": "<p>Instance variables belong to specific instances/objects of a class and are\ndeclared with <code>self</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 6960,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366031,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635911,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">:</span> \n  <span class=\"o\">@</span><span class=\"nb\">classmethod</span> \n  <span class=\"k\">def</span> <span class=\"nf\">class_method_name</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">):</span>\n    <span class=\"c1\"># some code\n</span></code></pre></div>\n<p>In this code sample, what does the keyword <code>cls</code> refer to?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class attributes and Class Methods",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class attributes and Class Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": 6824,
          "text": "",
          "html": "<p>The entire <code>MyClass</code> class itself.</p>",
          "comments": "",
          "comments_html": "<p>Perfect! <code>cls</code> is being used inside the class itself, so it refers to the class.</p>",
          "weight": 100.0
        },
        {
          "id": 7001,
          "text": "",
          "html": "<p>An instance of the class.</p>",
          "comments": "",
          "comments_html": "<p>Where is <code>cls</code> being used? Is it inside an instance method or inside the class?</p>",
          "weight": 0.0
        },
        {
          "id": 4,
          "text": "",
          "html": "<p>Global scope.</p>",
          "comments": "",
          "comments_html": "<p>Where is <code>cls</code> being used? Is it inside the class or just floating around in the\nfile not nested in any other code?</p>",
          "weight": 0.0
        },
        {
          "id": 1661,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366032,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635909,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What type of constant is defined within a class and is available to all\ninstances of a particular class?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class Constants",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class Constants</a></li></ul><p></p>",
      "answers": [
        {
          "id": 3812,
          "text": "",
          "html": "<p>Class</p>",
          "comments": "",
          "comments_html": "<p>Amazing! Class constants have the same value no matter which instance is\naccessing it. It is a shared constant and is also accessible inside of class\nmethods.</p>",
          "weight": 100.0
        },
        {
          "id": 4384,
          "text": "",
          "html": "<p>Global</p>",
          "comments": "",
          "comments_html": "<p>A global constant would be available to all class instances, not just a single\nclass. It would also be available to methods outside of classes, and, well,\neverywhere.</p>",
          "weight": 0.0
        },
        {
          "id": 669,
          "text": "",
          "html": "<p>Instance</p>",
          "comments": "",
          "comments_html": "<p>We don't usually declare constants inside of instance methods. What kind of\nconstant might we need if we want all of the instances of a class to have access\nto the same value?</p>",
          "weight": 0.0
        },
        {
          "id": 7672,
          "text": "",
          "html": "<p>I don't know</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366033,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635907,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>To create a constant, what syntax should be used?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class Constants",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class Constants</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9136,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"n\">VARIABLE_NAME</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Exactly! All caps and snake case is the way to go. We'd also declare it outside\nof any methods.</p>",
          "weight": 100.0
        },
        {
          "id": 5553,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">variable_name</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This is how we declare instance variables. You might want to review the source/s\nfor this question.</p>",
          "weight": 0.0
        },
        {
          "id": 3899,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"n\">variable_name</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This is how we declare class variables. You might want to review the source/s\nfor this question.</p>",
          "weight": 0.0
        },
        {
          "id": 4858,
          "text": "",
          "html": "<p>I don't know</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366034,
      "quiz_id": 53497,
      "quiz_group_id": null,
      "assessment_question_id": 635912,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">:</span>\n\n  <span class=\"n\">genres</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">author</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"n\">page_count</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">genre</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">genre</span><span class=\"p\">):</span>\n    <span class=\"n\">genres</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">genre</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Every time a genre is added to a <code>Book</code> object, we want to store that genre in\nthe class variable named genres. The code above doesn't currently do this.\nSelect the code snippet that does.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:  Class Constants",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/defining-class-attributes-and-class-methods?module_item_id=629245\">Class Constants</a></li></ul><p></p>",
      "answers": [
        {
          "id": 5931,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">:</span>\n\n  <span class=\"n\">genres</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">author</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"n\">page_count</span>\n\n  <span class=\"o\">@</span><span class=\"nb\">classmethod</span>\n  <span class=\"k\">def</span> <span class=\"nf\">genre</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">,</span> <span class=\"n\">genre</span><span class=\"p\">):</span>\n    <span class=\"n\">cls</span><span class=\"p\">.</span><span class=\"n\">genres</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">genre</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Wow! Nailed it!! By calling <code>cls.genres.append</code> adding the genre to <code>genres</code>,\nwe achieve exactly what we want.</p>",
          "weight": 100.0
        },
        {
          "id": 5707,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">:</span>\n\n  <span class=\"n\">genres</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">author</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">page_count</span> <span class=\"o\">=</span> <span class=\"n\">page_count</span>\n\n  <span class=\"o\">@</span><span class=\"nb\">classmethod</span>\n  <span class=\"k\">def</span> <span class=\"nf\">genre</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">,</span> <span class=\"n\">genre</span><span class=\"p\">):</span>\n    <span class=\"n\">genres</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">genre</span><span class=\"p\">)</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This isn't actually adding the genre to <code>genres</code>. Is there something missing?</p>",
          "weight": 0.0
        },
        {
          "id": 2914,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}